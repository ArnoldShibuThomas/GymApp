plugins {
    id "com.github.spotbugs" version "5.0.12"
    id "checkstyle"
    id 'jacoco'
}

/////////////////////////////////////
//Update after each US Completed!
/////////////////////////////////////
def currVersion = "2.10.63" //Sprint.US completed.CurrUS#

apply plugin: 'application'


mainClassName = 'main/java/memoranda/Start'

compileJava.options.encoding = 'UTF-8'

// Repositories and dependencies for code go here
repositories {
  mavenCentral()
  jcenter()
}

dependencies {
  implementation 'com.io7m.xom:xom:1.2.+'
  implementation 'net.sourceforge.nekohtml:nekohtml:1.9.+'
  implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'junit:junit:4.13.1'
    // this allows the unit test to run
  testImplementation "junit:junit:4.12"
  ant.importBuild("build.xml")
}



test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

run.doFirst {
    ant.buildnumber()
    manifest {
        attributes(
            'Implementation-Version': ant.antProject.properties['build.number']
            )
        println("Project Version: " + currVersion)
        }
    }

//run {
//    doFirst {
//        ant.buildnumber()
//        manifest {
//            attributes (
//                'Implementation-Version' : ant.antProject.properties['build.number']
//                )
//        }
//
//    }
//}

///////////////////////////////////////////////////////////////////////
// Build Number
/////////////////////////////////////////////////////////////////////
//ant.importBuild 'build.xml'
//
//build {
//    doLast {
//
//    }
//}


///////////////////////////////////////////////////////////////////////
// Configure Checkstyle
/////////////////////////////////////////////////////////////////////
apply plugin: 'checkstyle'
checkstyle {
  // Keep checkstyle a little quieter
  ignoreFailures = true
  showViolations = false
}

tasks.withType(Checkstyle) {
  reports {
    html.enabled = true
    xml.enabled = false
  }
}
checkstyle {
    toolVersion = "8.8"
}


///////////////////////////////////////////////////////////////////////
// Configure SpotBugs
///////////////////////////////////////////////////////////////////////
// To generate an HTML report instead of XML
spotbugsMain {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
spotbugs {
    ignoreFailures = true
    showProgress = true
    effort = 'max'
}
